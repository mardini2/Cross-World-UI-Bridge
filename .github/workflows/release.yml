name: Release

on:
  push:
    tags: ["v*.*.*"]
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Upgrade pip and install deps
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install pyinstaller

      - name: Clean PyInstaller outputs
        shell: pwsh
        run: |
          if (Test-Path .\dist) { Remove-Item -Recurse -Force .\dist }
          if (Test-Path .\build) { Remove-Item -Recurse -Force .\build }
          if (Test-Path .\UIBridge.spec) { Remove-Item -Force .\UIBridge.spec }
          if (Test-Path .\ui.spec) { Remove-Item -Force .\ui.spec }
          if (Test-Path .\UIBridgeLauncher.spec) { Remove-Item -Force .\UIBridgeLauncher.spec }

      - name: Build agent EXE (UIBridge.exe)
        run: >
          pyinstaller --noconfirm --clean --noconsole
          --name UIBridge
          --version-file installer/version_info.txt
          --hidden-import aiosqlite
          --hidden-import sqlalchemy.dialects.sqlite.aiosqlite
          --collect-submodules sqlalchemy.dialects
          app/main.py

      - name: Build CLI EXE (ui.exe)
        run: >
          pyinstaller --noconfirm --clean
          --name ui
          --version-file installer/version_info.txt
          --hidden-import aiosqlite
          --hidden-import sqlalchemy.dialects.sqlite.aiosqlite
          --collect-submodules sqlalchemy.dialects
          app/cli/entry.py

      - name: Build Launcher EXE (UIBridgeLauncher.exe)
        run: >
          pyinstaller --noconfirm --clean --noconsole
          --name UIBridgeLauncher
          --version-file installer/version_info.txt
          app/launcher_gui.py

      - name: Prepare Windows package folder
        shell: pwsh
        run: |
          $pkg = "UIBridge-Windows"
          if (Test-Path $pkg) { Remove-Item -Recurse -Force $pkg }
          New-Item -ItemType Directory -Force $pkg | Out-Null

          # Copy runtime folders
          Copy-Item -Recurse -Force "dist\UIBridge" "$pkg\UIBridge"
          Copy-Item -Recurse -Force "dist\ui" "$pkg\ui"
          Copy-Item -Recurse -Force "dist\UIBridgeLauncher" "$pkg\UIBridgeLauncher"

          # Copy helper scripts
          Copy-Item -Force "scripts\Start UIBridge Agent.cmd"   "$pkg\Start UIBridge Agent.cmd"
          Copy-Item -Force "scripts\Open UIBridge CLI.cmd"      "$pkg\Open UIBridge CLI.cmd"
          Copy-Item -Force "scripts\install_agent_startup.ps1"  "$pkg\install_agent_startup.ps1"
          Copy-Item -Force "scripts\uninstall_agent_startup.ps1"$pkg\uninstall_agent_startup.ps1"
          Copy-Item -Force "scripts\install_cli_shim.ps1"       "$pkg\install_cli_shim.ps1"

          # README lines (ASCII-safe)
          $readmeLines = @(
            'UIBridge CLI â€” Windows Bundle',
            '',
            'Files:',
            '- UIBridge\UIBridge.exe       (local agent)',
            '- ui\ui.exe                   (command-line tool)',
            '- UIBridgeLauncher\UIBridgeLauncher.exe (friendly launcher UI)',
            '',
            'Quick start:',
            '1) Double-click UIBridgeLauncher.exe',
            '   - Click "Start Agent" to start the local agent.',
            '   - Click "Open CLI" to open a terminal with ui.exe.',
            '2) In the terminal, try:',
            '   ui doctor',
            '   ui open example.com',
            '   ui search drake',
            '',
            'Spotify (first time):',
            '1) Run: ui setup',
            '   - Paste your Spotify Client ID (public; no secret).',
            '   - Browser opens; complete login.',
            '2) Then try:',
            '   ui play "moment apart odesza"',
            '   ui now',
            '   ui pause',
            '',
            'Notes:',
            '- If the CLI cannot connect, start the agent first.',
            '- If browser commands fail, click "Start Agent" and try again.',
            '- Windows may warn about downloaded ZIPs. Right-click the ZIP > Properties > Unblock, then extract.',
            '',
            'Support: see the project README on GitHub.'
          )
          Set-Content -Path "$pkg\README.txt" -Value $readmeLines -Encoding ascii

      - name: Archive Windows package (single zip)
        shell: pwsh
        run: |
          if (Test-Path "UIBridge-Windows.zip") { Remove-Item -Force "UIBridge-Windows.zip" }
          Compress-Archive -Path "UIBridge-Windows\*" -DestinationPath "UIBridge-Windows.zip" -Force

      - name: Upload artifact for publish job
        uses: actions/upload-artifact@v4
        with:
          name: UIBridge-zip
          path: UIBridge-Windows.zip

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download built artifact
        uses: actions/download-artifact@v4
        with:
          name: UIBridge-zip
          path: .

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: UIBridge-Windows.zip
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
