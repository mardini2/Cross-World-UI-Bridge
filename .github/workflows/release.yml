name: Release

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Upgrade pip and install deps
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install pyinstaller

      - name: Clean PyInstaller outputs
        shell: pwsh
        run: |
          if (Test-Path .\dist) { Remove-Item -Recurse -Force .\dist }
          if (Test-Path .\build) { Remove-Item -Recurse -Force .\build }
          if (Test-Path .\UIBridge.spec) { Remove-Item -Force .\UIBridge.spec }
          if (Test-Path .\ui.spec) { Remove-Item -Force .\ui.spec }

      - name: Build agent EXE with PyInstaller
        run: pyinstaller --noconfirm --clean --noconsole --name UIBridge --version-file installer/version_info.txt app/main.py

      - name: Build CLI EXE (ui)
        run: pyinstaller --noconfirm --clean --name ui --version-file installer/version_info.txt app/cli/entry.py

      # Package the full onedir folders + helper launchers + installer scripts
      - name: Prepare Windows package folder
        shell: pwsh
        run: |
          $pkg = "UIBridge-Windows"
          if (Test-Path $pkg) { Remove-Item -Recurse -Force $pkg }
          New-Item -ItemType Directory -Force $pkg | Out-Null

          Copy-Item -Recurse -Force "dist\UIBridge" "$pkg\UIBridge"
          Copy-Item -Recurse -Force "dist\ui" "$pkg\ui"

          # Write helper launchers without here-strings (YAML-safe)
          Set-Content -Encoding ascii "$pkg\Open UIBridge CLI.cmd" @(
            '@echo off',
            'cd /d "%~dp0ui"',
            'start "" cmd /k ui.exe --help'
          )
          Set-Content -Encoding ascii "$pkg\Start UIBridge Agent.cmd" @(
            '@echo off',
            'cd /d "%~dp0UIBridge"',
            'start "" UIBridge.exe'
          )

          Copy-Item -Force "scripts\install_agent_startup.ps1" "$pkg\install_agent_startup.ps1"
          Copy-Item -Force "scripts\uninstall_agent_startup.ps1" "$pkg\uninstall_agent_startup.ps1"

      - name: Archive Windows package
        shell: pwsh
        run: |
          if (Test-Path "UIBridge-Windows.zip") { Remove-Item -Force "UIBridge-Windows.zip" }
          Compress-Archive -Path "UIBridge-Windows\*" -DestinationPath "UIBridge-Windows.zip" -Force

      - name: Upload artifact for publish job
        uses: actions/upload-artifact@v4
        with:
          name: UIBridge-zip
          path: UIBridge-Windows.zip

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download built artifact
        uses: actions/download-artifact@v4
        with:
          name: UIBridge-zip
          path: .

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: UIBridge-Windows.zip
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
