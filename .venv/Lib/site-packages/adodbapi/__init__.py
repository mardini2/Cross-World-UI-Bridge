# nopycln: file # undecidable cases due to explicit re-exports https://github.com/hadialqattan/pycln/issues/205
"""adodbapi - A python DB API 2.0 (PEP 249) interface to Microsoft ADO

Copyright (C) 2002 Henrik Ekelund, version 2.1 by Vernon Cole
* https://sourceforge.net/projects/adodbapi
"""

import time

# Re-exports to keep backward compatibility with existing code
from .adodbapi import Connection as Connection
from .adodbapi import Cursor as Cursor
from .adodbapi import __version__
from .adodbapi import connect as connect
from .adodbapi import dateconverter
from .apibase import BINARY as BINARY
from .apibase import DATETIME as DATETIME
from .apibase import NUMBER as NUMBER
from .apibase import ROWID as ROWID
from .apibase import STRING as STRING
from .apibase import DatabaseError as DatabaseError
from .apibase import DataError as DataError
from .apibase import Error as Error
from .apibase import FetchFailedError as FetchFailedError
from .apibase import IntegrityError as IntegrityError
from .apibase import InterfaceError as InterfaceError
from .apibase import InternalError as InternalError
from .apibase import NotSupportedError as NotSupportedError
from .apibase import OperationalError as OperationalError
from .apibase import ProgrammingError as ProgrammingError
from .apibase import Warning as Warning
from .apibase import apilevel as apilevel
from .apibase import paramstyle as paramstyle
from .apibase import threadsafety as threadsafety


def Binary(aString):
    """This function constructs an object capable of holding a binary (long) string value."""
    return bytes(aString)


def Date(year, month, day):
    "This function constructs an object holding a date value."
    return dateconverter.Date(year, month, day)


def Time(hour, minute, second):
    "This function constructs an object holding a time value."
    return dateconverter.Time(hour, minute, second)


def Timestamp(year, month, day, hour, minute, second):
    "This function constructs an object holding a time stamp value."
    return dateconverter.Timestamp(year, month, day, hour, minute, second)


def DateFromTicks(ticks):
    """This function constructs an object holding a date value from the given ticks value
    (number of seconds since the epoch; see the documentation of the standard Python time module for details).
    """
    return Date(*time.gmtime(ticks)[:3])


def TimeFromTicks(ticks):
    """This function constructs an object holding a time value from the given ticks value
    (number of seconds since the epoch; see the documentation of the standard Python time module for details).
    """
    return Time(*time.gmtime(ticks)[3:6])


def TimestampFromTicks(ticks):
    """This function constructs an object holding a time stamp value from the given
    ticks value (number of seconds since the epoch;
    see the documentation of the standard Python time module for details)."""
    return Timestamp(*time.gmtime(ticks)[:6])


version = "adodbapi v" + __version__
